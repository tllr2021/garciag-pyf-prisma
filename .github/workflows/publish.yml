name: Cinema
on:
  push:
    branches:
      - 'master'
env:
  PRISMA_MANAGEMENT_API_SECRET: ${{ secrets.PRISMA_MANAGEMENT_API_SECRET }}
  URL_BASE: http://147.182.187.121:4466
  ENVIRONMENT: production
jobs:
  prisma_deploy:
    name: Prisma deploy
    runs-on: ubuntu-latest
    steps:
      - name: Set Env to Production
        run: echo "ENVIRONMENT=production" >> $GITHUB_ENV
      - name: Create env file
        run: |
          touch .env
          echo PRISMA_SECRET=${{ secrets.PRISMA_SECRET }} >> .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo ENVIRONMENT=${{ secrets.ENVIRONMENT }} >> .env
          echo PRISMA_MANAGEMENT_SECRET=${{ secrets.PRISMA_MANAGEMENT_SECRET }} >> .env
      - name: Include repo
        uses: actions/checkout@v2
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Prisma
        run: npm install -g prisma@1.34.10
      - name: Deploy
        run: prisma deploy -p ${{ github.workspace }}/prisma/prisma.yml
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/cinema-app:latest
